/*
 * Windmill server API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.39.0
 * Contact: contact@windmill.dev
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct GlobalUserInfo {
    #[serde(rename = "email")]
    pub email: String,
    #[serde(rename = "login_type")]
    pub login_type: LoginType,
    #[serde(rename = "super_admin")]
    pub super_admin: bool,
    #[serde(rename = "verified")]
    pub verified: bool,
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    #[serde(rename = "company", skip_serializing_if = "Option::is_none")]
    pub company: Option<String>,
}

impl GlobalUserInfo {
    pub fn new(email: String, login_type: LoginType, super_admin: bool, verified: bool) -> GlobalUserInfo {
        GlobalUserInfo {
            email,
            login_type,
            super_admin,
            verified,
            name: None,
            company: None,
        }
    }
}

/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum LoginType {
    #[serde(rename = "password")]
    Password,
    #[serde(rename = "github")]
    Github,
}

impl Default for LoginType {
    fn default() -> LoginType {
        Self::Password
    }
}

