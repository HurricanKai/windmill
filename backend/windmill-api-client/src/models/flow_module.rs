/*
 * Windmill server API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.39.0
 * Contact: contact@windmill.dev
 * Generated by: https://openapi-generator.tech
 */

#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct FlowModule {
    #[serde(rename = "id")]
    pub id: String,
    #[serde(rename = "input_transforms", skip_serializing_if = "Option::is_none")]
    pub input_transforms:
        Option<::std::collections::HashMap<String, crate::models::InputTransform>>,
    #[serde(rename = "value")]
    pub value: Box<crate::models::FlowModuleValue>,
    #[serde(rename = "stop_after_if", skip_serializing_if = "Option::is_none")]
    pub stop_after_if: Option<Box<crate::models::FlowModuleStopAfterIf>>,
    #[serde(rename = "sleep", skip_serializing_if = "Option::is_none")]
    pub sleep: Option<Box<crate::models::InputTransform>>,
    #[serde(rename = "summary", skip_serializing_if = "Option::is_none")]
    pub summary: Option<String>,
    #[serde(rename = "suspend", skip_serializing_if = "Option::is_none")]
    pub suspend: Option<Box<crate::models::FlowModuleSuspend>>,
    #[serde(rename = "retry", skip_serializing_if = "Option::is_none")]
    pub retry: Option<Box<crate::models::Retry>>,
}

impl FlowModule {
    pub fn new(id: String, value: crate::models::FlowModuleValue) -> FlowModule {
        FlowModule {
            id,
            input_transforms: None,
            value: Box::new(value),
            stop_after_if: None,
            sleep: None,
            summary: None,
            suspend: None,
            retry: None,
        }
    }
}
