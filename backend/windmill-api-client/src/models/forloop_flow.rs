/*
 * Windmill server API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.39.0
 * Contact: contact@windmill.dev
 * Generated by: https://openapi-generator.tech
 */

#[derive(Clone, Debug, PartialEq, Serialize, Deserialize)]
pub struct ForloopFlow {
    #[serde(rename = "modules")]
    pub modules: Vec<crate::models::FlowModule>,
    #[serde(rename = "iterator")]
    pub iterator: Box<crate::models::InputTransform>,
    #[serde(rename = "skip_failures")]
    pub skip_failures: bool,
    #[serde(rename = "type")]
    pub r#type: RHashType,
}

impl ForloopFlow {
    pub fn new(
        modules: Vec<crate::models::FlowModule>,
        iterator: crate::models::InputTransform,
        skip_failures: bool,
        r#type: RHashType,
    ) -> ForloopFlow {
        ForloopFlow { modules, iterator: Box::new(iterator), skip_failures, r#type }
    }
}

///
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum RHashType {
    #[serde(rename = "forloopflow")]
    Forloopflow,
}

impl Default for RHashType {
    fn default() -> RHashType {
        Self::Forloopflow
    }
}
