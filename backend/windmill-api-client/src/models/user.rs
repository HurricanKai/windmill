/*
 * Windmill server API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.39.0
 * Contact: contact@windmill.dev
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct User {
    #[serde(rename = "email")]
    pub email: String,
    #[serde(rename = "username")]
    pub username: String,
    #[serde(rename = "is_admin")]
    pub is_admin: bool,
    #[serde(rename = "is_super_admin")]
    pub is_super_admin: bool,
    #[serde(rename = "created_at")]
    pub created_at: String,
    #[serde(rename = "operator")]
    pub operator: bool,
    #[serde(rename = "disabled")]
    pub disabled: bool,
    #[serde(rename = "groups", skip_serializing_if = "Option::is_none")]
    pub groups: Option<Vec<String>>,
    #[serde(rename = "usage", skip_serializing_if = "Option::is_none")]
    pub usage: Option<Box<crate::models::Usage>>,
}

impl User {
    pub fn new(email: String, username: String, is_admin: bool, is_super_admin: bool, created_at: String, operator: bool, disabled: bool) -> User {
        User {
            email,
            username,
            is_admin,
            is_super_admin,
            created_at,
            operator,
            disabled,
            groups: None,
            usage: None,
        }
    }
}


